// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id
  email         String    @unique
  firstName     String?
  lastName      String?
  role          UserRole  @default(STUDENT)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  enrollments   CourseEnrollment[]
  chatHistory   ChatMessage[]
  progress      LessonProgress[]
}

model Course {
  id          String    @id @default(cuid())
  title       String
  description String
  category    CourseCategory
  level       Level     @default(BEGINNER)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  lessons     Lesson[]
  enrollments CourseEnrollment[]
}

model Lesson {
  id          String    @id @default(cuid())
  title       String
  content     String
  courseId    String
  order       Int
  type        LessonType
  course      Course    @relation(fields: [courseId], references: [id])
  progress    LessonProgress[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model CourseEnrollment {
  id        String    @id @default(cuid())
  userId    String
  courseId  String
  status    EnrollmentStatus @default(IN_PROGRESS)
  user      User      @relation(fields: [userId], references: [id])
  course    Course    @relation(fields: [courseId], references: [id])
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model LessonProgress {
  id        String    @id @default(cuid())
  userId    String
  lessonId  String
  completed Boolean   @default(false)
  user      User      @relation(fields: [userId], references: [id])
  lesson    Lesson    @relation(fields: [lessonId], references: [id])
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model ChatMessage {
  id        String    @id @default(cuid())
  content   String
  role      Role
  userId    String
  user      User      @relation(fields: [userId], references: [id])
  createdAt DateTime  @default(now())
}

enum UserRole {
  STUDENT
  INSTRUCTOR
  ADMIN
}

enum Level {
  BEGINNER
  INTERMEDIATE
  ADVANCED
}

enum LessonType {
  VIDEO
  TEXT
  QUIZ
  INTERACTIVE
  AI_PRACTICE
}

enum Role {
  USER
  ASSISTANT
}

enum EnrollmentStatus {
  IN_PROGRESS
  COMPLETED
  DROPPED
}

// Add this new enum with the course categories
enum CourseCategory {
  PROGRAMMING
  DATA_SCIENCE
  BUSINESS
  DESIGN
  MARKETING
  SOFT_SKILLS
  PROJECT_MANAGEMENT
  LANGUAGES
  TECHNOLOGY
  LEADERSHIP
}